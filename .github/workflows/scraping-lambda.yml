# Sample workflow to access AWS resources when workflow is tied to branch
# The workflow Creates static website using aws s3
name: AWS example workflow
on:
  pull_request: # プルリクエストをトリガーにする。
    branches: # トリガーさせるマージ先ブランチを制限。
      - main
    # paths:
    #   - "cdk/scraping-lambda/*"
    types:
      - closed
env:
  AWS_REGION: ap-northeast-1
# permission can be added at job level or workflow level
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get temporary credentials with OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ vars.AWS_OIDC_ROLE_ARN }}
          aws-region: ${{env.AWS_REGION}}

      - name: Cache Dependency
        uses: actions/cache@v3
        id: cache_dependency_id
        env:
          cache-name: cache-cdk-dependency
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }}
          restore-keys: ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Install CDK Dependency
        if: steps.cache_dependency_id.outputs.cache-hit != 'true'
        run: |
          cd cdk/scraping-lambda
          npm install

      - name: Deploy
        run: |
          cd cdk/scraping-lambda
          npm run deploy
